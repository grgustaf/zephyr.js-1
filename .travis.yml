language: generic # setting language to C will override cross-compiler and fail

sudo: required
dist: trusty

notifications:
  irc:
    channels:
      - "irc://irc.freenode.net:8001/#zjs"
    on_success: change
    on_failure: always

env:
  global:
    - ZEPHYR_GCC_VARIANT=zephyr
    - ZEPHYR_SDK_INSTALL_DIR=/opt/zephyr-sdk
    - ZEPHYR_BASE=$TRAVIS_BUILD_DIR/deps/zephyr
    - ZEPHYR_SDK_VERSION=0.8.2
    - ZEPHYR_SDK_DOWNLOAD_FOLDER=https://nexus.zephyrproject.org/content/repositories/releases/org/zephyrproject/zephyr-sdk/$ZEPHYR_SDK_VERSION-i686
    - ZEPHYR_SDK_SETUP_BINARY=zephyr-sdk-$ZEPHYR_SDK_VERSION-i686-setup.run
    - ZEPHYR_SDK_DOWNLOAD_URL=$ZEPHYR_SDK_DOWNLOAD_FOLDER/$ZEPHYR_SDK_SETUP_BINARY
  matrix:
    - TARGET="zephyr"
    - TARGET="linux"
    - TARGET="ashell"

before_install:
  - sudo apt-get update -qq
  - sudo apt-get install make gcc g++ python3-ply ncurses-dev uglifyjs sysvbanner -qq

install: >
  if [ "$TARGET" != "linux" ]; then
    wget $ZEPHYR_SDK_DOWNLOAD_URL &&
    chmod +x $ZEPHYR_SDK_SETUP_BINARY &&
    ./$ZEPHYR_SDK_SETUP_BINARY --quiet -- -y -d $ZEPHYR_SDK_INSTALL_DIR > /dev/null;
  fi

before_script: >
  source zjs-env.sh &&
  if [ "$TARGET" != "linux" ]; then
    make update &&
    source deps/zephyr/zephyr-env.sh
  fi

script: >
  if [ "$TARGET" == "zephyr" ]; then
    # run spanning set of A101 build tests
    banner helloworld &&
    make V=1 &&
    banner "traffic" &&
    make V=1 JS=samples/TrafficLight.js &&
    banner "pwm" &&
    make V=1 JS=samples/PWM.js &&
    banner "i2c" &&
    make V=1 JS=samples/I2C.js &&
    banner "uart" &&
    make V=1 JS=samples/UART.js &&
    banner "events" &&
    make V=1 JS=samples/tests/Events.js &&
    banner "perf" &&
    make V=1 JS=tests/test-performance.js &&

    # run k64f hello world build test (should expand)
    git clean -dfx &&
    banner "k64f hello" &&
    make V=1 BOARD=frdm_k64f &&

    # test arc build
    git clean -dfx &&
    banner "arc" &&
    make V=1 arc &&

    # test large partition A101 x86 build
    git clean -dfx &&
    source zjs-env.sh 256 &&
    banner "btgrove" &&
    make V=1 JS=samples/WebBluetoothGroveLcdDemo.js

  elif [ "$TARGET" == "linux" ]; then
    # check for any new trailing whitespace since the first fetched commit
    banner "git check" &&
    git diff --check $(git rev-list HEAD | tail -1) &&

    # run linux build test
    banner "linux" &&
    make V=1 linux &&

    # run linux unit tests
    banner "unit tests" &&
    ./outdir/linux/release/jslinux --unittest

  elif [ "$TARGET" == "ashell" ]; then
    # test ashell build
    git clean -dfx &&
    banner "ashell" &&
    make V=1 DEV=ashell
  fi
